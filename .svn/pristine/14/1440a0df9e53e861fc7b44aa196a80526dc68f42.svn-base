<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zccbh.demand.mapper.event.EventMapper">
    <insert id="saveSingle" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        insert into cbh_event
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eventNo != null and eventNo != ''">eventNo,</if>
            <if test="eventQrcode != null and eventQrcode != ''">eventQrcode,</if>
            <if test="customerId != null">customerId,</if>
            <if test="carId != null">carId,</if>
            <if test="maintenanceshopId != null">maintenanceshopId,</if>
            <if test="timePay != null">timePay,</if>
            <if test="amtPay != null">amtPay,</if>
            <if test="amtCooperation != null">amtCooperation,</if>
            <if test="amtCBH != null">amtCBH,</if>
            <if test="amtShare != null">amtShare,</if>
            <if test="amtBusiness != null">amtBusiness,</if>
            <if test="timeReceiveOrder != null">timeReceiveOrder,</if>
            <if test="timeComplete != null">timeComplete,</if>
            <if test="statusEvent != null">statusEvent,</if>
            <if test="isInvalid != null and isInvalid != ''">isInvalid,</if>
            <if test="cancellationsReason != null and cancellationsReason != ''">cancellationsReason,</if>
            <if test="cancellationsInstructions != null and cancellationsInstructions != ''">cancellationsInstructions,</if>
            <if test="createAt != null">createAt,</if>
            <if test="invalidTime != null">invalidTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eventNo != null and eventNo != ''">#{eventNo,jdbcType=VARCHAR},</if>
            <if test="eventQrcode != null and eventQrcode != ''">#{eventQrcode,jdbcType=VARCHAR},</if>
            <if test="customerId != null">#{customerId,jdbcType=INTEGER},</if>
            <if test="carId != null">#{carId,jdbcType=INTEGER},</if>
            <if test="maintenanceshopId != null">#{maintenanceshopId,jdbcType=INTEGER},</if>
            <if test="timePay != null">#{timePay,jdbcType=DATE},</if>
            <if test="amtPay != null">#{amtPay,jdbcType=DECIMAL},</if>
            <if test="amtCooperation != null">#{amtCooperation,jdbcType=DECIMAL},</if>
            <if test="amtCBH != null">#{amtCBH,jdbcType=DECIMAL},</if>
            <if test="amtShare != null">#{amtShare,jdbcType=DECIMAL},</if>
            <if test="amtBusiness != null">#{amtBusiness,jdbcType=DECIMAL},</if>
            <if test="timeReceiveOrder != null">#{timeReceiveOrder,jdbcType=DATE},</if>
            <if test="timeComplete != null">#{timeComplete,jdbcType=DATE},</if>
            <if test="statusEvent != null">#{statusEvent,jdbcType=INTEGER},</if>
            <if test="isInvalid != null and isInvalid != ''">#{isInvalid,jdbcType=INTEGER},</if>
            <if test="cancellationsReason != null and cancellationsReason != ''">#{cancellationsReason,jdbcType=VARCHAR},</if>
            <if test="cancellationsInstructions != null and cancellationsInstructions != ''">#{cancellationsInstructions,jdbcType=VARCHAR},</if>
            <if test="createAt != null">#{createAt,jdbcType=DATE},</if>
            <if test="invalidTime != null">#{invalidTime,jdbcType=DATE},</if>
        </trim>
    </insert>

    <update id="updateModel" parameterType="java.util.Map">
        UPDATE cbh_event
        <set>
            <if test="eventQrcode != null and eventQrcode != ''">eventQrcode = #{eventQrcode,jdbcType=VARCHAR},</if>
            <if test="customerId != null">customerId = #{customerId,jdbcType=INTEGER},</if>
            <if test="carId != null">carId = #{carId,jdbcType=INTEGER},</if>
            <if test="maintenanceshopId != null">maintenanceshopId = #{maintenanceshopId,jdbcType=INTEGER},</if>
            <if test="timePay != null">timePay = #{timePay,jdbcType=DATE},</if>
            <if test="amtPay != null">amtPay = #{amtPay,jdbcType=DECIMAL},</if>
            <if test="amtCooperation != null">amtCooperation = #{amtCooperation,jdbcType=DECIMAL},</if>
            <if test="amtCBH != null">amtCBH = #{amtCBH,jdbcType=DECIMAL},</if>
            <if test="amtShare != null">amtShare = #{amtShare,jdbcType=DECIMAL},</if>
            <if test="amtBusiness != null">amtBusiness = #{amtBusiness,jdbcType=DECIMAL},</if>
            <if test="timeReceiveOrder != null">timeReceiveOrder = #{timeReceiveOrder,jdbcType=DATE},</if>
            <if test="timeComplete != null">timeComplete = #{timeComplete,jdbcType=DATE},</if>
            <if test="statusEvent != null">statusEvent = #{statusEvent,jdbcType=INTEGER},</if>
            <if test="isInvalid != null and isInvalid != ''">isInvalid = #{isInvalid,jdbcType=INTEGER},</if>
            <if test="cancellationsReason != null and cancellationsReason != ''">cancellationsReason = #{cancellationsReason,jdbcType=VARCHAR},</if>
            <if test="cancellationsInstructions != null and cancellationsInstructions != ''">cancellationsInstructions = #{cancellationsInstructions,jdbcType=VARCHAR},</if>
            <if test="createAt != null">createAt = #{createAt,jdbcType=DATE},</if>
            <if test="invalidTime != null">invalidTime = #{invalidTime,jdbcType=DATE},</if>
        </set>
        WHERE eventNo = #{eventNo,jdbcType=VARCHAR}
    </update>

    <select id="findMore" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT e.*,c.customerPN,c.source AS sourceName,car.compensateNum,car.nameCarOwner,car.licensePlateNumber,car.model,car.amtCompensation,car.amtCooperation AS carAmtCooperation,car.timeBegin,car.status AS carStatus,m.name AS shopName FROM cbh_event e
            LEFT JOIN cbh_user_customer c ON c.id = e.customerId
            LEFT JOIN cbh_car car ON car.id = e.carId
            LEFT JOIN cbh_maintenanceshop m ON m.id = e.maintenanceshopId
        WHERE 1=1
        <if test="customerPN != null and customerPN != ''"> and customerPN like concat(#{customerPN,jdbcType=VARCHAR},'%')</if>
        <if test="nameCarOwner != null and nameCarOwner != ''"> and nameCarOwner like concat(#{nameCarOwner,jdbcType=VARCHAR},'%')</if>
        <if test="shopName != null and shopName != ''"> and m.name like concat(#{shopName,jdbcType=VARCHAR},'%')</if>
        <if test="licensePlateNumber != null and licensePlateNumber != ''"> and licensePlateNumber like concat(#{licensePlateNumber,jdbcType=VARCHAR},'%')</if>
        <if test="carId != null"> and e.carId =#{carId}</if>
        <if test="maintenanceshopId != null"> and e.maintenanceshopId =#{maintenanceshopId}</if>
        <if test="statusEvent != null and statusEvent != ''"> and statusEvent IN (${statusEvent})</if>
        <if test="isInvalid != null and isInvalid != ''"> and e.isInvalid IN (${isInvalid})</if>
        <if test="searchInfo != null and searchInfo != ''"> AND (nameCarOwner LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%') OR customerPN LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%') OR licensePlateNumber LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%') OR c.source LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%'))</if>
        ORDER BY e.createAt desc
    </select>

    <select id="findSingle" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT e.*,c.customerPN,c.openId,car.compensateNum,car.nameCarOwner,car.licensePlateNumber,car.model,car.amtCompensation,car.amtCooperation AS carAmtCooperation FROM cbh_event e
        LEFT JOIN cbh_user_customer c ON c.id = e.customerId
        LEFT JOIN cbh_car car ON car.id = e.carId
        WHERE eventNo = #{eventNo,jdbcType=VARCHAR}
    </select>

	<select id="findCompensateList" parameterType="java.util.Map" resultType="java.util.Map">
        select e.eventNo,e.amtCooperation eventAmtCooperation,e.isInvalid,e.timePay,e.amtPay,e.amtShare,a.timeApply,a.timeExamine,a.reasonFailure,a.reasonSuccess,a.createAt uploadImgTime,e.statusEvent,e.amtShare,c.nameCarOwner,c.model,c.licensePlateNumber,c.amtCompensation,c.amtCooperation,c.typeGuarantee,
       rec.timeReceiveEnd timeReceiveCar,rec.timeReceiveCar timeEnd,rec.createAt receiveCreateTime,rec.longitude,rec.latitude,
        ass.createAt assertCreateTime,ass.amtAssert,u.portrait,
        ass.timeAssert assertEndTime,rep.timeBegin repairBeginTime,rep.timeEnd repairEndTime,
        com.timeComplaint,ec.score commentScore,ec.createAt commentTime
        FROM cbh_event e
        LEFT JOIN cbh_car c on c.id=e.carId
        LEFT JOIN cbh_user_customer u on e.customerId=u.id
        LEFT JOIN (select rr.* from  (select r.eventNo,MAX(r.id) id from cbh_event_apply r GROUP BY r.eventNo) r
LEFT JOIN cbh_event_apply rr on rr.id=r.id) a on a.eventNo=e.eventNo
        LEFT JOIN cbh_event_assert ass on ass.eventNo = e.eventNo
        LEFT JOIN (select rr.* from  (select r.eventNo,MAX(r.id) id from cbh_event_receivecar r GROUP BY r.eventNo) r
LEFT JOIN cbh_event_receivecar rr on rr.id=r.id) rec on rec.eventNo = e.eventNo 
        LEFT JOIN cbh_event_repair rep on rep.eventNo=e.eventNo
        LEFT JOIN cbh_event_complaint com on com.eventNo=e.eventNo
        LEFT JOIN cbh_event_comment ec on ec.eventNo=e.eventNo
        WHERE 1=1
        <if test="statusEvent != null  and statusEvent != ''"> and e.statusEvent =#{statusEvent}</if>
        <if test="customerId != null  and customerId != ''"> and e.customerId =#{customerId}</if>
        <if test="publicity != null  and publicity != ''">  and e.statusEvent>=41 and 71>e.statusEvent </if>
         <if test="finish != null  and finish != ''">  and e.statusEvent >=71</if>
        <if test="isInvalid != null  and isInvalid != ''">  and e.isInvalid =#{isInvalid}</if>

        ORDER BY e.createAt desc
    </select>
    <select id="selectFoundation" resultType="java.util.Map">
      select * from (select count(1) eventCount from cbh_event e where e.statusEvent>40) a,
    (select f.showTotal amtBalance,f.amtPaid,f.showCustomer userCount from cbh_foundation f ORDER BY f.createAt desc limit 1) b,
(select count(1) todayEventCount from cbh_event e where DATE_FORMAT(e.createAt,'%Y%m%d')=DATE_FORMAT(now(),'%Y%m%d') ) d
    </select>

    <select id="findOrderDetail" parameterType="java.util.Map" resultType="java.util.Map">
       select e.eventNo,e.customerId,e.amtBusiness,e.isInvalid,e.amtCBH,e.amtCooperation eventAmtCooperation,e.timePay,e.amtPay,e.amtShare,a.timeApply,a.timeExamine,a.createAt uploadImgTime,e.statusEvent,TIMESTAMPDIFF(DAY,u.timeJoin,now()) joinDay,u.nickname,u.customerPN,u.portrait,c.engineNum,c.registerDate,c.issueDate,c.drivingLicense,c.VIN,c.id carId,c.timeExamine carTimeExamine,c.reasonSuccess carReasonSuccess,c.reasonFailure carReasonFailure,c.carPhotos,c.nameCarOwner,c.model,c.licensePlateNumber,c.amtCompensation,c.amtCooperation,a.accidentDescription,c.typeGuarantee,
        a.accidentImg,a.reasonFailure,a.reasonSuccess,rec.reciveCarTime,rec.nameCarOwner fromName,rec.longitude,rec.latitude,rec.telCarOwner fromTel,rec.nameCarReceive toName,rec.telCarReceive toTel,rec.place,rec.createAt receiveCreateTime,rec.timeReceiveCar timeEnd,rec.timeReceiveEnd timeReceiveCar,
        me.`name` maintenanceshopEmployeename1,m1.`name` maintenanceshopName1,m1.longitude shopLongitude,m1.latitude shopLatitude,me.workYear workYear1,me2.`name` maintenanceshopEmployeename2,me2.workYear workYear2,m.`name` maintenanceshopName2,m1.address maintenanceshopAddress1,m.id maintenanceshopId,m.tel shopTel,m.accountId,m.address maintenanceshopAddress2,ass.createAt assertCreateTime,ass.amtAssert,ass.damageExtent,ass.damagePosition,ass.description,
        ass.assertImg,ass.timeAssert assertEndTime,rep.timeBegin repairBeginTime,rep.timeEnd repairEndTime,rep.img repairImg,rep.description repDescription,
        com.content complaintContent,com.timeComplaint,com.img complaintImg,ec.content commentContent,ec.score commentScore,ec.createAt commentTime,ec.labelContent commentLabelContent,bm.businessId,
	m.logo img1,me.img img2,me2.img img3
        FROM cbh_event e
        LEFT JOIN cbh_car c on c.id=e.carId
        LEFT JOIN cbh_user_customer u on e.customerId=u.id
        LEFT JOIN (select rr.* from  (select r.eventNo,MAX(r.id) id from cbh_event_apply r GROUP BY r.eventNo) r
LEFT JOIN cbh_event_apply rr on rr.id=r.id) a on a.eventNo=e.eventNo
        LEFT JOIN cbh_event_assert ass on ass.eventNo = e.eventNo
        LEFT JOIN cbh_maintenanceshop_employee me on me.id =ass.maintenanceshopEmployeeId
				 LEFT JOIN cbh_maintenanceshop m1 on m1.id=me.maintenanceshopId
        LEFT JOIN cbh_maintenanceshop m on m.id=e.maintenanceshopId
        LEFT JOIN (select rr.* from  (select r.eventNo,MAX(r.id) id from cbh_event_receivecar r GROUP BY r.eventNo) r
LEFT JOIN cbh_event_receivecar rr on rr.id=r.id) rec on rec.eventNo = e.eventNo  
        LEFT JOIN cbh_event_repair rep on rep.eventNo=e.eventNo
				LEFT JOIN cbh_maintenanceshop_employee me2 on me2.id =rep.repairmanId
        LEFT JOIN cbh_event_complaint com on com.eventNo=e.eventNo
        LEFT JOIN cbh_event_comment ec on ec.eventNo=e.eventNo
LEFT JOIN (select * from middle_business_maintenanceshop bm group by bm.maintenanceshopId) bm on bm.maintenanceshopId=m.id
        WHERE 1=1

        <if test="eventNo != null and eventNo != ''"> and e.eventNo=#{eventNo} </if>
        <if test="publicity != null and publicity != ''"> and e.statusEvent>=41 </if>
        limit 1
    </select>
      <select id="findPublicityEvent" parameterType="java.util.Map" resultType="java.util.Map">
       select * from (select count(1) totalCount from cbh_event e) a,
			(select count(1) publicityCount from cbh_event e where e.statusEvent>=41  and 71>e.statusEvent ) b,
			(select count(1) finishCount from cbh_event e where   e.statusEvent >=71 ) c
    </select>
    <select id="findPublicityAmount" parameterType="java.util.Map" resultType="java.util.Map">
       select f.showTotal amtTotal,f.amtBalance,f.amtPaid from cbh_foundation f 
    </select>
     <select id="findJionNew" parameterType="java.util.Map" resultType="java.util.Map">
       select c.model,u.portrait from cbh_car c
LEFT JOIN cbh_user_customer u on u.id=c.customerId
 where DATE_ADD(c.timeBegin,INTERVAL 10 SECOND)>now()
    </select>
    <select id="findMessageNew" parameterType="java.util.Map" resultType="java.util.Map">
       select m.content,m.type,if(m.type=31,m.licensePlateNumber,m.eventNo) id,m.id messageId from cbh_message m where m.type in (31,41) and m.isRead=1 and m.customerId = #{customerId}
    </select>
    <select id="findApplyCount" parameterType="java.util.Map" resultType="int">
       SELECT count(1) FROM cbh_event e WHERE e.statusEvent NOT IN (100) AND e.carId=#{carId}
    </select>
    <select id="findApplyId" parameterType="java.util.Map" resultType="java.util.Map">
       SELECT e.eventNo FROM cbh_event e WHERE e.statusEvent NOT IN (100) AND e.carId=#{carId} ORDER BY e.id desc
    </select>
    <select id="findRandomCar" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT c.model,u.portrait from (SELECT t1.* FROM cbh_car AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM cbh_car)-(SELECT MIN(id) FROM cbh_car))+(SELECT MIN(id) FROM cbh_car)) AS id) AS t2
        WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1) c
        LEFT JOIN cbh_user_customer u on u.id=c.customerId
    </select>

    <select id="findAttention" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT e.eventNo,e.customerId,cm.maintenanceshopId,car.licensePlateNumber,car.model FROM cbh_event e
        LEFT JOIN cbh_user_customer c ON e.customerId = c.id
        LEFT JOIN middle_customer_maintenanceshop cm ON c.openId = cm.openId
        LEFT JOIN cbh_car car ON car.id = e.carId
		LEFT JOIN cbh_maintenanceshop m ON m.id=cm.maintenanceshopId
        WHERE m.type=10 AND m.status=1 AND e.eventNo = #{eventNo,jdbcType=VARCHAR}
    </select>

    <select id="findCount" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            COUNT(*) AS totalNum,
            COUNT( CASE WHEN e.statusEvent=1 AND e.isInvalid=1 THEN e.statusEvent END) AS applyNum,
            COUNT( CASE WHEN e.statusEvent=2 AND e.isInvalid=1 THEN e.statusEvent END) AS notPassNum,
            COUNT( CASE WHEN e.statusEvent=3 AND e.isInvalid=1 THEN e.statusEvent END) AS passNum,
            COUNT( CASE WHEN e.statusEvent=10 AND e.isInvalid=1 THEN e.statusEvent END) AS distributionNum,
            COUNT( CASE WHEN e.statusEvent=11 AND e.isInvalid=1 THEN e.statusEvent END) AS receiveNum,
            COUNT( CASE WHEN e.statusEvent=12 AND e.isInvalid=1 THEN e.statusEvent END) AS failReceiveNum,
            COUNT( CASE WHEN e.statusEvent=21 AND e.isInvalid=1 THEN e.statusEvent END) AS waitAssertNum,
            COUNT( CASE WHEN e.statusEvent=22 AND e.isInvalid=1 THEN e.statusEvent END) AS assertNum,
            COUNT( CASE WHEN e.statusEvent=31 AND e.isInvalid=1 THEN e.statusEvent END) AS waitReceiveNum,
            COUNT( CASE WHEN e.statusEvent=51 AND e.isInvalid=1 THEN e.statusEvent END) AS waitRepairNum,
            COUNT( CASE WHEN e.statusEvent=52 AND e.isInvalid=1 THEN e.statusEvent END) AS repairNum,
            COUNT( CASE WHEN e.statusEvent=61 AND e.isInvalid=1 THEN e.statusEvent END) AS receiveCarNum,
            COUNT( CASE WHEN e.statusEvent=71 AND e.isInvalid=1 THEN e.statusEvent END) AS commentNum,
            COUNT( CASE WHEN e.statusEvent=81 AND e.isInvalid=1 THEN e.statusEvent END) AS complaintNum,
            COUNT( CASE WHEN e.statusEvent=100 AND e.isInvalid=1 THEN e.statusEvent END) AS completeNum,
            COUNT( CASE WHEN e.isInvalid=10 THEN e.statusEvent END) AS invalidNum
        FROM cbh_event e
            LEFT JOIN cbh_user_customer c ON c.id = e.customerId
            LEFT JOIN cbh_car car ON car.id = e.carId
            LEFT JOIN cbh_maintenanceshop m ON m.id = e.maintenanceshopId
        WHERE 1=1
        <if test="searchInfo != null and searchInfo != ''"> AND (nameCarOwner LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%') OR customerPN LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%') OR licensePlateNumber LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%') OR c.source LIKE concat(#{searchInfo,jdbcType=VARCHAR},'%'))</if>
    </select>

    <select id="findCompleteEvent" resultType="java.util.Map">
        SELECT COUNT(*) AS eventNum FROM cbh_event e WHERE e.statusEvent>=51 AND e.isInvalid=1
    </select>

    <select id="chartEvent" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT datelist,IFNULL(num,0) AS num FROM
            (SELECT * FROM sys_calendar WHERE datelist BETWEEN #{beginTime} AND #{endTime}) AS date
        LEFT JOIN
            (SELECT DATE_FORMAT(createAt,'%Y-%m-%d') AS createAt,COUNT(id) AS num
                FROM cbh_event e
                WHERE createAt BETWEEN #{beginTime} AND #{endTime}
              GROUP BY DATE_FORMAT(createAt,'%Y-%m-%d')) AS result
        ON result.createAt = date.datelist
        ORDER BY datelist
    </select>

    <select id="findShopEvent" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT COUNT(*) AS orderNum FROM cbh_event
		WHERE maintenanceshopId = #{shopId}
    </select>

    <select id="findEventQuotation" parameterType="String" resultType="java.util.Map">
        SELECT e.eventNo,e.statusEvent,a.reasonSuccess AS examineExplanation,a.accidentDescription,a.accidentImg,car.model,car.drivingLicense
        FROM cbh_event e
        LEFT JOIN cbh_event_apply a ON a.eventNo = e.eventNo
        LEFT JOIN cbh_car car ON car.id = e.carId
        WHERE e.eventNo = #{eventNo,jdbcType=VARCHAR}
    </select>

    <select id="findHzOrderDetail" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            cm.ratio,
            erec.latitude,
	        erec.longitude,
            ea.comfirmAssertTime,
            e.failReceiveOrderTime,
            e.cancellationsReason,
            c.drivingLicense,
            cec.timeComplaint,
            er.timeEnd AS repairCarOverTime,
            er.timeBegin AS repairCarTime,
            crr.createAt AS receiveCarTime,
            ea.timeAssert AS submitAssertTime,
            e.isInvalid,
            c.carPhotos,
            e.statusEvent,
            c.nameCarOwner,
            u.customerPN,
            c.licensePlateNumber,
            c.model,
            c.amtCooperation,
            c.amtCompensation,
            c.observationEndTime,
            u.source,
            ec.score,
            ec.content,
            ec.labelContent,
            u.portrait,
            er.description AS repairDescription,
            er.img,
            er.repairmanId,
            me. NAME AS repairUserName,
            me.tel AS repairUserTel,
            ea.reasonAssert,
            e.amtBusiness,
            me2.`name` AS assertUserName,
            me2.tel AS assertUserTel,
            ea.amtAssert,
            ea.damageExtent,
            ea.damagePosition,
            ea.description AS assertDesciption,
            ea.assertImg,
            cm. NAME AS shopName,
            cm.tel AS shopTel,
            cm.address AS shopAddress,
            erec.nameCarOwner AS receiveCarName,
            erec.telCarOwner AS receiveCarTel,
            erec.timeReceiveCar,
            erec.place,
            cea.reasonSuccess,
            cea.reasonFailure,
            cea.accidentDescription,
            cea.accidentImg,
            e.eventNo,
            ec.createAt AS commentTime,
            e.invalidTime,
            cea.timeApply AS createOrderTime,
            cea.timeExamine AS applyTime,
            erec.createAt AS applyFenDanTime,
            erec.createAt AS FenDanTime,
            e.timeReceiveOrder AS receiveOrderTime,
            (SELECT timeReceiveEnd FROM cbh_event_receivecar WHERE `status` = 3 AND eventNo = #{eventNo}) AS handCarTime
        FROM
            cbh_event e
        LEFT JOIN cbh_car c ON e.carId = c.id
        LEFT JOIN cbh_user_customer u ON e.customerId = u.id
        LEFT JOIN cbh_event_comment ec ON e.eventNo = ec.eventNo
        LEFT JOIN cbh_event_repair er ON e.eventNo = er.eventNo
        LEFT JOIN cbh_maintenanceshop_employee me ON er.repairmanId = me.id
        LEFT JOIN cbh_event_assert ea ON ea.eventNo = e.eventNo
        LEFT JOIN cbh_maintenanceshop_employee me2 ON ea.maintenanceshopEmployeeId = me2.id
        LEFT JOIN cbh_maintenanceshop cm ON cm.id = e.maintenanceshopId
        LEFT JOIN (SELECT * FROM cbh_event_receivecar t WHERE t.`status` = 1) erec ON e.eventNo = erec.eventNo
        LEFT JOIN cbh_event_apply cea ON cea.eventNo = e.eventNo
        LEFT JOIN cbh_event_complaint cec ON e.eventNo = cec.eventNo
        LEFT JOIN (SELECT * FROM cbh_record_recharge WHERE `status` = 1) crr ON e.eventNo = crr.eventNo
        WHERE
            e.eventNo = #{eventNo}
        LIMIT 1
    </select>

    <select id="eventApplyFail" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            c.datelist,
            IFNULL(cevent.number, 0) AS numbers
        FROM
            sys_calendar c
        LEFT JOIN (
            SELECT
                date_format(e.createAt, '%Y-%m-%d') AS datelist,
                COUNT(1) AS number
            FROM
                cbh_event e
            WHERE
                e.statusEvent = #{statusEvent}
            AND e.createAt BETWEEN #{beginTime}
            AND #{endTime}
            GROUP BY
                date_format(e.createAt, '%Y-%m-%d')
        ) cevent ON c.datelist = cevent.datelist
        WHERE
            c.datelist BETWEEN #{beginTime}
        AND #{endTime}
        ORDER BY
            c.datelist ASC
    </select>

    <select id="eventApplySuccess" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            c.datelist,
            IFNULL(cevent.number, 0) AS numbers
        FROM
            sys_calendar c
        LEFT JOIN (
            SELECT
                date_format(e.createAt, '%Y-%m-%d') AS datelist,
                COUNT(1) AS number
            FROM
                cbh_event e
            WHERE
                e.statusEvent NOT IN (1,2)
            AND e.createAt BETWEEN #{beginTime}
            AND #{endTime}
            GROUP BY
                date_format(e.createAt, '%Y-%m-%d')
        ) cevent ON c.datelist = cevent.datelist
        WHERE
            c.datelist BETWEEN #{beginTime}
        AND #{endTime}
        ORDER BY
            c.datelist ASC
    </select>


    <select id="findOrderQuotation" parameterType="String" resultType="java.util.Map">
        SELECT
            e.orderNo AS eventNo,
            e.status AS statusEvent,
            e.examineExplanation AS examineExplanation,
            e.accidentDescription AS accidentDescription,
            e.accidentImg AS accidentImg,
            car.model,
            car.drivingLicense
        FROM
            cbh_order e
        LEFT JOIN cbh_car car ON car.id = e.carId
        WHERE
            e.orderNo = #{eventNo,jdbcType=VARCHAR}
    </select>
    
    <select id="eventResult" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT IFNULL(SUM(e.amtCooperation+e.amtCBH),0) AS eventMoney,COUNT(1) eventNum from cbh_event e 
		where e.statusEvent = '100'
		<if test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">and e.timeComplete  BETWEEN #{beginTime} AND #{endTime}</if>  
    </select>
</mapper>