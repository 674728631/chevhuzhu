package com.zccbh.demand.service.customer;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.zccbh.demand.mapper.customer.RecordRechargeMapper;
import com.zccbh.util.collect.Constant;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import static java.util.stream.Collectors.toList;

import java.util.HashMap;

@Service
@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
public class RecordRechargeService {
    @Autowired
    private RecordRechargeMapper recordRechargeMapper;

    /**
     * 查询充值数据
     * @param paramModelMap 查询条件
     * @return 充值信息
     * @throws Exception
     */
    public PageInfo<Map<String, Object>> customerRecord(Map<String, Object> paramModelMap) throws Exception {
        int pageNo = Constant.toEmpty(paramModelMap.get("pageNo"))?Integer.parseInt(paramModelMap.get("pageNo").toString()):1;
        int pageSize = Constant.toEmpty(paramModelMap.get("pageSize"))?Integer.parseInt(paramModelMap.get("pageSize").toString()):10;
        PageHelper.startPage(pageNo, pageSize);
        List<Map<String, Object>> rechargeList = recordRechargeMapper.customerRecord(paramModelMap);
        PageInfo<Map<String, Object>> rechargeInfo = new PageInfo<>(rechargeList);
        return rechargeInfo;
    }

    /**
     * 查询充值数据
     * @param paramModelMap 查询条件
     * @return 充值信息
     * @throws Exception
     */
    public List<Map<String, Object>> findAllRecharge(Map<String, Object> paramModelMap) throws Exception {
        return recordRechargeMapper.findRechargeList(paramModelMap);
    }
    
    public Map<String, Object> findRechargeDate(Map<String, Object> paramModelMap) throws Exception{
    	Map<String,Object> resultMap=recordRechargeMapper.findRechargeDate(paramModelMap); 
    	Map result = new HashMap<>();
    	result.put("rechargeAmt", resultMap.get("rechargeAmt"));
    	result.put("rechargeNum", resultMap.get("rechargeNum"));
    	result.put("amt1Total", resultMap.get("amt1Total"));
    	result.put("amt9Total", resultMap.get("amt9Total"));
    	result.put("amt99Total", resultMap.get("amt99Total"));
    	result.put("rescueTotal", resultMap.get("rescueTotal"));
    	return result;
    }
}


