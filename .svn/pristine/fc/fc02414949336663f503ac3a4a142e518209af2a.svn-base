package com.zccbh.demand.controller.weChat;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import com.zccbh.demand.mapper.merchants.CbhMaintenanceshopMapper;
import com.zccbh.demand.pojo.merchants.CbhCar;
import com.zccbh.demand.pojo.merchants.CbhMaintenanceshop;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zccbh.demand.mapper.activities.CouponMapper;
import com.zccbh.demand.mapper.activities.MiddleCouponCustomerMapper;
import com.zccbh.demand.mapper.business.MaintenanceshopMapper;
import com.zccbh.demand.mapper.business.MiddleCustomerMaintenanceshopMapper;
import com.zccbh.demand.mapper.customer.UserCustomerMapper;
import com.zccbh.demand.service.weChat.WeiXinUtils;
import com.zccbh.util.base.CommonField;
import com.zccbh.util.base.DateUtils;
import com.zccbh.util.base.SecurityUtil;
import com.zccbh.util.base.SmsDemo;
import com.zccbh.util.collect.Constant;

/**
 * 
 * @ClassName: PromotionController 
 * @Description: TODO(这里用一句话描述这个类的作用) 
 * @author xiaowuge
 * @date 2018年9月17日 上午9:56:30 
 * 渠道拉新接口
 *
 */
@Controller
public class PromotionController {
	@Autowired
	MiddleCustomerMaintenanceshopMapper middleCustomerMaintenanceshopMapper;
	@Autowired
	UserCustomerMapper userCustomerMapper;
	@Autowired
	WeiXinUtils weiXinUtils;
	@Autowired
	MiddleCouponCustomerMapper middleCouponCustomerMapper;
	@Autowired
	CouponMapper couponMapper;
	@Autowired
	MaintenanceshopMapper maintenanceshopMapper;
	@Autowired
	CbhMaintenanceshopMapper cbhMaintenanceshopMapper;
	
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "/JoinActivities",method = {RequestMethod.POST,RequestMethod.GET},produces = "application/json;charset=utf-8")
	   @ResponseBody
	   public String JoinActivities(HttpServletRequest request){
	       try {
	    	   String openId = String.valueOf(request.getSession().getAttribute("fromUserName"));
//			   String openId = "ob8Yy0lmZRzLGP946Vo4COd1t333";
	    	   if (StringUtils.isBlank(openId) || "null".equals(openId)){
				   return Constant.toReModel(CommonField.FAIL_OPENID, "没有获取到OPENID,请刷新后再试", null);
			   }
	    	   //String openId = "ob8Yy0lmZRzLGP946Vo4COd1tIUk";
	    	   String shopId = request.getParameter("shopId");   //店ID
	    	   String couponNo = request.getParameter("couponNo");  //优惠券编号
	    	   String mobileNumber = request.getParameter("mobileNumber");  //手机号
	    	   Map<String,Object> rMap = new HashMap<String, Object>();
	           if (Constant.toEmpty(openId)) {
				   Map<String, String> nicknames = weiXinUtils.getNickname(openId);
	               String headimgurl = nicknames.get("headimgurl");
	               String nickname = nicknames.get("nickname");
	               rMap.put("customerPN",mobileNumber);
	               List<Map<String,Object>> list = userCustomerMapper.findMore(rMap);
		    	   String customerId = "";
		    	   if(list!=null&&list.size()>0){
					   rMap.clear(); //优惠券数量减少1
					   rMap.put("shopId", shopId);
					   rMap.put("couponNo", couponNo);
					   List<Map<String,Object>> more = couponMapper.findMore(rMap);
					   if(more!=null&&more.size()>0){
						   Map<String,Object> coupon = more.get(0);
						   Integer type = (Integer) coupon.get("type");
						   if (type==2){
							   return Constant.toReModel(CommonField.FAIL, "对不起,您已注册登录车V互助", CommonField.PARAMETER_ERROR_PROMPT);
						   }
					   }
					   System.out.println("---------------------------该手机已经有账号");
		    		   customerId = String.valueOf(list.get(0).get("id"));
		    		   String opid = String.valueOf(list.get(0).get("openId"));   //该手机号以前的openId
		    		   rMap.clear();
		    		   rMap.put("openId", opid);
			    	   list = middleCustomerMaintenanceshopMapper.findMore(rMap);  //微信
			    	   if(list!=null&&list.size()>0){
			    		   Map<String,Object> map = list.get(0);
			    		   String maintenanceshopId = String.valueOf(map.get("maintenanceshopId"));
			    		   if(!maintenanceshopId.equals(shopId)){
			    			   return Constant.toReModel(CommonField.ALREADY_RECEIVED, "你已通过其他渠道关注过车V互助", CommonField.PARAMETER_ERROR_PROMPT);
			    		   }
				    	}else{ //未关注过
				    		System.out.println("---------------------------有账号未关注");

				    		rMap.clear();
				    		rMap.put("openId", openId);
					    	list = middleCustomerMaintenanceshopMapper.findMore(rMap);  //微信
					    	if(list==null||(list!=null&&list.size()<=0)){
					    		rMap.put("maintenanceshopId", shopId);
					    		rMap.put("status", 0);
					    		rMap.put("customerId", customerId);
					    		middleCustomerMaintenanceshopMapper.saveSingle(rMap);
					    	}else{
					    		rMap.put("maintenanceshopId", shopId);
					    		middleCustomerMaintenanceshopMapper.updateModel(rMap);
					    	}


				    		rMap.clear();  //更新用户表的openId
				    		rMap.put("openId", openId);
				    		rMap.put("id", customerId);
				    		userCustomerMapper.updateModel(rMap);
				    	}
		    	   }else{ //如果是新用户
					   System.out.println("---------------------------新用户无账号未关注");
					   rMap.clear();
					   CbhMaintenanceshop maintenanceshop = cbhMaintenanceshopMapper.selectByPrimaryKey(Integer.valueOf(shopId));
					   if (maintenanceshop !=null) {
						   rMap.put("source",maintenanceshop.getName());
						}
						rMap.put("customerPN",mobileNumber);
						Date tokenTime = DateUtils.getTokenTime();
						String toKen = SecurityUtil.getToKen();
						rMap.put("openId", openId);
						rMap.put("toKen",toKen);
						rMap.put("tokenaging",tokenTime);
						rMap.put("portrait",headimgurl);
						rMap.put("nickname",nickname);
						userCustomerMapper.saveSingle(rMap);
						customerId = String.valueOf(rMap.get("id"));

					   rMap.clear();
					   rMap.put("openId", openId);
					   list = middleCustomerMaintenanceshopMapper.findMore(rMap);  //微信
					   if(list==null||(list!=null&&list.size()<=0)){
						   rMap.put("maintenanceshopId", shopId);
						   rMap.put("status", 0);
						   rMap.put("customerId", customerId);
						   middleCustomerMaintenanceshopMapper.saveSingle(rMap);
					   }else{
						   rMap.put("maintenanceshopId", shopId);
						   middleCustomerMaintenanceshopMapper.updateModel(rMap);
					   }
		    	   }
	               
		    	   rMap.clear();   
		    	   rMap.put("customerId", customerId);
		    	   rMap.put("couponNo", couponNo);
		    	   list = middleCouponCustomerMapper.findMore(rMap);
		    	   if(list!=null&&list.size()>0){ //已经领取过
		    		   return Constant.toReModel(CommonField.ALREADY_RECEIVED, "已经领取过优惠券", CommonField.PARAMETER_ERROR_PROMPT); 
		    	   }
		    	   rMap.clear(); //优惠券数量减少1
		    	   rMap.put("shopId", shopId);
				   rMap.put("couponNo", couponNo);
				   list = couponMapper.findMore(rMap);
		    	   String flag = "";
		    	   if(list!=null&&list.size()>0){
		    		   Map<String,Object> map = list.get(0);
		    		   String couponId = String.valueOf(map.get("id"));
		    		   String status = String.valueOf(map.get("status"));
		    		   switch (status) {
		    		   case "0":
						flag = "活动未开始";
						break;
		    		   case "2":
						flag = "活动已结束";
						break;
		    		   case "100":
						flag = "优惠券已领完";
						break;
		    		   default:
						break;
		    		   }
		    		   if(flag.equals("")){
		    			   int surplusNum = Integer.valueOf(String.valueOf(map.get("surplusNum")));
		    			   rMap.clear();
		    			   rMap.put("surplusNum", --surplusNum);
		    			   rMap.put("couponNo", couponNo);
		    			   if(surplusNum==0){  //数量为0把状态改为100
		    				   rMap.put("status", 100);
		    			   }
		    			   couponMapper.updateModel(rMap);
		    			   
		    			   
		    			   rMap.clear();   //插入优惠券和用户关联表
				    	   rMap.put("customerId", customerId);
				    	   rMap.put("couponNo", couponNo);
				    	   rMap.put("status", 1);
				    	   rMap.put("isDel", 0);
				    	   middleCouponCustomerMapper.saveSingle(rMap);
				    	   
				    	   rMap.clear();
				    	   rMap.put("id", shopId);
				    	   Map<String,Object> m = maintenanceshopMapper.findSingle(rMap);
				    	   if ("161".equals(shopId)){
				    	   		// 太平洋保险拉新活动 特殊要求
							   SmsDemo.sendSms(91, String.valueOf(mobileNumber), "车V互助");
						   }else {
							   SmsDemo.sendSms(91, String.valueOf(mobileNumber), String.valueOf(m.get("name")));
						   }
		    		   }else{ //活动异常
		    			   return Constant.toReModel(CommonField.FAIL, flag, CommonField.PARAMETER_ERROR_PROMPT); 
		    		   }
		    	   }else{
		    		   return Constant.toReModel(CommonField.FAIL, "没有找到此优惠活动", CommonField.PARAMETER_ERROR_PROMPT);
		    	   }
	           }
	       } catch (Exception e) {
	           e.printStackTrace();
	       }
	       return Constant.toReModel(CommonField.SUCCESS, "", CommonField.PARAMETER_ERROR_PROMPT);
	   }
}
