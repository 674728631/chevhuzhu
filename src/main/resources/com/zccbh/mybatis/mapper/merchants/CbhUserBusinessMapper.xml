<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zccbh.demand.mapper.merchants.CbhUserBusinessMapper" >
  <resultMap id="BaseResultMap" type="com.zccbh.demand.pojo.merchants.CbhUserBusiness" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="businessUN" property="businessUN" jdbcType="VARCHAR" />
    <result column="businessPN" property="businessPN" jdbcType="VARCHAR" />
    <result column="businessPW" property="businessPW" jdbcType="VARCHAR" />
    <result column="openId" property="openId" jdbcType="VARCHAR" />
    <result column="toKen" property="toKen" jdbcType="VARCHAR" />
    <result column="tokenAging" property="tokenAging" jdbcType="TIMESTAMP" />
    <result column="iosDeviceId" property="iosDeviceId" jdbcType="VARCHAR" />
    <result column="androidDeviceId" property="androidDeviceId" jdbcType="VARCHAR" />
    <result column="timeLogin" property="timeLogin" jdbcType="TIMESTAMP" />
    <result column="loginErrorNum" property="loginErrorNum" jdbcType="INTEGER" />
    <result column="timeLockover" property="timeLockover" jdbcType="TIMESTAMP" />
    <result column="typeLock" property="typeLock" jdbcType="INTEGER" />
    <result column="typeUser" property="typeUser" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createAt" property="createAt" jdbcType="TIMESTAMP" />
  </resultMap>
      <select id="selectByToken" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
          from cbh_user_business
          WHERE toKen = #{toKen,jdbcType=VARCHAR} AND status =1
        <if test="mobileNumber !=null and mobileNumber != ''"> and businessUN = #{mobileNumber,jdbcType=VARCHAR}</if>
      </select>
  <select id="selectByMobileNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
        from cbh_user_business
        WHERE businessUN = #{userName,jdbcType=VARCHAR} and businessPW = #{passWord,jdbcType=VARCHAR}
  </select>
  <select id="getOrderList" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT a.* from (
      (SELECT a.*,b.meetingTrainTime FROM(
      SELECT
      cc.licensePlateNumber,#车牌号
      cc.nameCarOwner,#车主姓名
      ca.timeApply,#申请理赔时间
      ce.timeReceiveOrder,#接单时间
      cc.model AS brand,#品牌
      cme.NAME AS pricingName,#定损员
      cea.timeAssert,#完成定损时间
      cea.createAt,#提交定损时间
      cea.amtAssert,#定损费用
      cer.createAt AS timeReceiveCar,#预计接车时间
      er.timeBegin,#开始维修时间
      cmm. NAME AS maintenanceName,#维修人员
      er.timeEnd,	#维修完成时间
      cec.createAt AS timeComplaint,#投诉时间
      ce.timeComplete,#互助事件完成时间
      ceo.createAt AS ceoCreateAt,#评价时间
      ce.statusEvent,#时间状态
      ce.eventNo
      FROM
      cbh_event AS ce
      LEFT JOIN cbh_car AS cc ON ce.carId = cc.id
      LEFT JOIN cbh_event_apply AS ca ON ce.eventNo = ca.eventNo
      LEFT JOIN cbh_event_assert AS cea ON ce.eventNo = cea.eventNo
      LEFT JOIN cbh_maintenanceshop_employee AS cme ON cme.id = cea.maintenanceshopEmployeeId
      LEFT JOIN cbh_event_receivecar AS cer ON ce.eventNo = cer.eventNo
      LEFT JOIN cbh_event_repair AS er ON ce.eventNo = er.eventNo
      LEFT JOIN cbh_maintenanceshop_employee AS cmm ON er.repairmanId = cmm.id
      LEFT JOIN cbh_event_complaint AS cec ON ce.eventNo = cec.eventNo
      LEFT JOIN cbh_event_comment AS ceo ON ce.eventNo = ceo.eventNo
      LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = ce.maintenanceshopId
      LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.id
      LEFT JOIN cbh_user_business AS cub ON cub.id = mbm.businessId
      WHERE
      cub.toKen =#{toKen,jdbcType=VARCHAR}
      AND ce.statusEvent !=12
      AND ce.isInvalid !=10
      <choose>
          <when test="orderStatus==1">
              and ce.statusEvent IN (71,100)
          </when>
          <when test="orderStatus==10">
              and ce.statusEvent IN (71,100)
          </when>
          <when test="orderStatus==0">
              and ce.statusEvent NOT IN (1,2,3,10,71,100)
          </when>
          <when test="orderStatus==20">
              and ce.statusEvent NOT IN (1,2,3,10,71,100)
          </when>
          <otherwise>
              and ce.statusEvent  >10
          </otherwise>
      </choose>
      ) a
      LEFT JOIN(
      SELECT
      timeReceiveCar AS meetingTrainTime,
      eventNo AS orderNo
      FROM cbh_event_receivecar WHERE status=3) b ON a.eventNo=b.orderNo
      )
      union
      (
      SELECT cc.licensePlateNumber,#车牌号
      cc.nameCarOwner,#车主姓名
      co.applyTime AS timeApply,#申请理赔时间
      co.receiveOrderTime AS timeReceiveOrder,#接单时间
      cc.model AS brand,#品牌
      cme.NAME AS pricingName,#定损员
      co.comfirmAssertTime AS timeAssert,#完成定损时间
      co.assertTime AS createAt,#提交定损时间
      co.amtAssert,#定损费用
      co.deliverCarTime AS timeReceiveCar,#预计接车时间
      co.beginRepairTime AS timeBegin,#开始维修时间
      cmae.NAME AS maintenanceName,#维修人员
      co.endRepairTime AS timeEnd,	#维修完成时间
      co.complaintTime AS timeComplaint,#投诉时间
      co.completeTime AS timeComplete,#互助事件完成时间
      co.completeTime AS ceoCreateAt,#评价时间
      co.status AS statusEvent,#时间状态
      co.orderNo AS eventNo,
      co.takeCarTime AS meetingTrainTime
      from cbh_order AS co
      LEFT JOIN cbh_maintenanceshop AS cm ON co.maintenanceshopId=cm.id
      LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.id
      LEFT JOIN cbh_user_business AS cub ON cub.id = mbm.businessId
      LEFT JOIN cbh_car AS cc ON co.carId=cc.id
      LEFT JOIN cbh_maintenanceshop_employee AS cme ON co.assertmanId=cme.id
      LEFT JOIN cbh_maintenanceshop_employee AS cmae ON co.repairmanId=cmae.id
      WHERE
      cub.toKen =#{toKen,jdbcType=VARCHAR}
      AND co.status !=12
      AND co.isInvalid =1
      <choose>
          <when test="orderStatus==1">
              AND co.status IN (61,100)
          </when>
          <when test="orderStatus==10">
              AND co.status IN (61,100)
          </when>
          <when test="orderStatus==0">
              AND co.status NOT IN (1,2,3,10,61,100)
          </when>
          <when test="orderStatus==20">
              AND co.status NOT IN (1,2,3,10,61,100)
          </when>
          <otherwise>
              AND co.status  >10
          </otherwise>
      </choose>
      ))a
  <choose>
    <when test="orderStatus==1">
        GROUP BY a.eventNo
        ORDER BY a.timeApply DESC
        LIMIT #{page,jdbcType=INTEGER}, 20
    </when>
    <when test="orderStatus==10">
        GROUP BY a.eventNo
        ORDER BY a.timeApply DESC
    </when>
    <when test="orderStatus==0">
        GROUP BY a.eventNo
        ORDER BY a.timeApply DESC
        LIMIT #{page,jdbcType=INTEGER}, 20
    </when>
    <when test="orderStatus==20">
        GROUP BY a.eventNo
        ORDER BY a.timeApply DESC
    </when>
    <when test="page != null">
        GROUP BY a.eventNo
        ORDER BY a.timeApply DESC
        LIMIT #{page,jdbcType=INTEGER}, 20
    </when>
    <otherwise>
        GROUP BY a.eventNo
        ORDER BY a.timeApply DESC
    </otherwise>
  </choose>
  </select>
  <select id="selectByPhoneNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
        from cbh_user_business
        WHERE businessUN = #{mobileNumber,jdbcType=VARCHAR}
  </select>
    <select id="getHomePageParameter" parameterType="java.lang.String" resultType="java.util.Map">
    SELECT
        a.*, b.*
    FROM
        (
            SELECT
                ca.amtUnfreeze,
                #可用金额
                ca.amtFreeze,
                #冻结金额
                ca.thirdPartyAccount,
                ca.amtPaid,
                cm.servicePoints,
                (case when ca.accountPW IS NULL then 500 else 200 end) AS password
            FROM
                cbh_user_business AS cub
            LEFT JOIN middle_business_maintenanceshop AS mbm ON cub.id = mbm.businessId
            LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = mbm.maintenanceshopId
            LEFT JOIN cbh_account AS ca ON ca.id = cm.accountId
            WHERE
                cub.toKen = #{toKen,jdbcType=VARCHAR}
        ) a
    JOIN(
     			SELECT SUM(a.orderNumber) AS orderNumber FROM (
			 (SELECT
            COUNT(ce.id) AS orderNumber
        FROM
            cbh_event AS ce
        LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = ce.maintenanceshopId
        LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.id
        LEFT JOIN cbh_user_business AS cub ON cub.id = mbm.businessId
        WHERE
            cub.toKen = #{toKen,jdbcType=VARCHAR}
            AND ce.statusEvent !=12
            AND ce.statusEvent>10)
				UNION All
				 (SELECT COUNT(co.id) AS orderNumber
        FROM
            cbh_order AS co
        LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = co.maintenanceshopId
        LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.id
        LEFT JOIN cbh_user_business AS cub ON cub.id = mbm.businessId
        WHERE
            cub.toKen = #{toKen,jdbcType=VARCHAR}
            AND co.status !=12
            AND co.isInvalid=1
            AND co.status >10)
        )a
    ) b
    </select>
  <select id="getTotalAmount" parameterType="java.lang.String" resultType="java.util.Map">
    SELECT
    ca.amtUnfreeze,
    #可用金额
    ca.amtFreeze,#冻结金额
    ca.thirdPartyAccount,
    ca.amtPaid
    FROM cbh_user_business AS cub
    LEFT JOIN middle_business_maintenanceshop AS mbm ON cub.id = mbm.businessId
    LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = mbm.maintenanceshopId
    LEFT JOIN cbh_account AS ca ON ca.id=cm.accountId
    WHERE
    cub.toKen = #{toKen,jdbcType=VARCHAR}
  </select>
    <select id="getMyDetails" parameterType="java.lang.String" resultType="java.util.Map">
  SELECT a.*,b.* FROM(
						SELECT
                ca.amtUnfreeze,
                #可用金额
                ca.amtFreeze,
                #冻结金额
                ca.thirdPartyAccount,
                ca.amtPaid,
                cm.logo,
                cm.poster AS posterList,
                cm.name,
                cm.type,
                cub.businessUN,
                AVG(cec.score) AS commentPoints,
                cm.servicePoints
            FROM
                cbh_user_business AS cub
            LEFT JOIN middle_business_maintenanceshop AS mbm ON cub.id = mbm.businessId
            LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = mbm.maintenanceshopId
            LEFT JOIN cbh_account AS ca ON ca.id = cm.accountId
            LEFT JOIN cbh_event_comment AS cec ON cec.maintenanceshopId=cm.id
            WHERE
            cub.toKen = #{toKen,jdbcType=VARCHAR}
            ) a
            JOIN(
 			SELECT SUM(a.orderNumber) AS orderNumber FROM (
			 (SELECT
            COUNT(ce.id) AS orderNumber
        FROM
            cbh_event AS ce
        LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = ce.maintenanceshopId
        LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.id
        LEFT JOIN cbh_user_business AS cub ON cub.id = mbm.businessId
        WHERE
            cub.toKen = #{toKen,jdbcType=VARCHAR}
            AND ce.statusEvent !=12
            AND ce.statusEvent>10)
				UNION ALL
				 (SELECT COUNT(co.id) AS orderNumber
        FROM
            cbh_order AS co
        LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = co.maintenanceshopId
        LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.id
        LEFT JOIN cbh_user_business AS cub ON cub.id = mbm.businessId
        WHERE
            cub.toKen = #{toKen,jdbcType=VARCHAR}
            AND co.status !=12
            AND co.isInvalid=1
            AND co.status >10)
        )a
            ) b
    </select>
    <select id="getCustomerPhone" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT customerPN,openId
    FROM cbh_user_customer
    where id=#{id,jdbcType=INTEGER}
    </select>
    <select id="getadministratorPhone" resultType="java.lang.String">
        select adminPN from cbh_user_admin where roleId BETWEEN 1 and 2
    </select>
    <select id="getUserBusinessByMaintenanceshopId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT cub.* FROM
        cbh_user_business AS cub
        LEFT JOIN middle_business_maintenanceshop AS mbm ON cub.id = mbm.businessId
        LEFT JOIN cbh_maintenanceshop AS cm ON cm.id = mbm.maintenanceshopId
        where cm.id=#{id,jdbcType=INTEGER}
        AND typeUser=1
    </select>
    <select id="helpEachOtherList" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
        c.portrait AS img,
        c.customerPN AS mobileNumber,
        cc.nameCarOwner AS name,
        cc.licensePlateNumber
        ,IFNULL((rechar.amt),0) AS rechargeAmt
    FROM
        cbh_user_customer c
    LEFT JOIN middle_customer_maintenanceshop cm ON c.openId = cm.openId
    LEFT JOIN cbh_car cc ON cc.customerId = c.id
    LEFT JOIN middle_business_maintenanceshop AS mbm ON mbm.maintenanceshopId = cm.maintenanceshopId
    LEFT JOIN cbh_user_business AS cub ON mbm.businessId = cub.id
    LEFT JOIN cbh_record_recharge AS rechar ON rechar.customerId = c.id
        AND rechar.`status` = 1
       <![CDATA[  AND rechar.type < 3  ]]>
       <![CDATA[ AND rechar.eventType <3  ]]>
        WHERE
        cc.status IN (13,20)
    AND cub.toKen = #{toKen,jdbcType=VARCHAR}
    <if test="selectField !=null and selectField !=''">
    AND  (c.customerPN like concat('%',#{selectField,jdbcType=VARCHAR},'%') or cc.licensePlateNumber like concat('%',#{selectField,jdbcType=VARCHAR},'%'))
    </if>
    GROUP BY cc.licensePlateNumber
    <if test="page !=null and page !=''">
    LIMIT #{page,jdbcType=INTEGER},20
    </if>
    </select>
</mapper>