<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zccbh.demand.mapper.customer.UserCustomerMapper">
    <insert id="saveSingle" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        insert into cbh_user_customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerUN != null and customerUN != ''">customerUN,</if>
            <if test="customerPN != null and customerPN != ''">customerPN,</if>
            <if test="customerPW != null and customerPW != ''">customerPW,</if>
            <if test="source != null and source != ''">source,</if>
            <if test="wechat != null and wechat != ''">wechat,</if>
            <if test="portrait != null and portrait != ''">portrait,</if>
            <if test="nickname != null and nickname != ''">nickname,</if>
            <if test="sex != null">sex,</if>
            <if test="birthday != null">birthday,</if>
            <if test="area != null and area != ''">area,</if>
            <if test="timeLogin != null">timeLogin,</if>
            <if test="loginErrorNum != null">loginErrorNum,</if>
            <if test="timeLockover != null">timeLockover,</if>
            <if test="typeLock != null">typeLock,</if>
            <if test="typeUser != null">typeUser,</if>
            <if test="status != null">status,</if>
            <if test="timeJoin != null">timeJoin,</if>
            <if test="toKen != null">token,</if>
            <if test="tokenaging != null">tokenaging,</if>
            <if test="androidDeviceId != null">androidDeviceId,</if>
            <if test="iosDeviceId != null">iosDeviceId,</if>
            <if test="openId != null">openId,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerUN != null and customerUN != ''">#{customerUN,jdbcType=VARCHAR},</if>
            <if test="customerPN != null and customerPN != ''">#{customerPN,jdbcType=VARCHAR},</if>
            <if test="customerPW != null and customerPW != ''">#{customerPW,jdbcType=VARCHAR},</if>
            <if test="source != null and source != ''">#{source,jdbcType=VARCHAR},</if>
            <if test="wechat != null and wechat != ''">#{wechat,jdbcType=VARCHAR},</if>
            <if test="portrait != null and portrait != ''">#{portrait,jdbcType=VARCHAR},</if>
            <if test="nickname != null and nickname != ''">#{nickname,jdbcType=VARCHAR},</if>
            <if test="sex != null">#{sex,jdbcType=INTEGER},</if>
            <if test="birthday != null">#{birthday,jdbcType=DATE},</if>
            <if test="area != null and area != ''">#{area,jdbcType=VARCHAR},</if>
            <if test="timeLogin != null">#{timeLogin,jdbcType=DATE},</if>
            <if test="loginErrorNum != null">#{loginErrorNum,jdbcType=INTEGER},</if>
            <if test="timeLockover != null">#{timeLockover,jdbcType=DATE},</if>
            <if test="typeLock != null">#{typeLock,jdbcType=INTEGER},</if>
            <if test="typeUser != null">#{typeUser,jdbcType=INTEGER},</if>
            <if test="status != null">#{status,jdbcType=INTEGER},</if>
            <if test="timeJoin != null">#{timeJoin,jdbcType=DATE},</if>
            <if test="toKen != null">#{toKen,jdbcType=VARCHAR},</if>
            <if test="tokenaging != null">#{tokenaging,jdbcType=DATE},</if>
            <if test="androidDeviceId != null">#{androidDeviceId,jdbcType=VARCHAR},</if>
            <if test="iosDeviceId != null">#{iosDeviceId,jdbcType=VARCHAR},</if>
            <if test="openId != null">#{openId,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <update id="updateModel" parameterType="java.util.Map">
        UPDATE cbh_user_customer
        <set>
            <if test="maintenanceshopId != null">maintenanceshopId = #{maintenanceshopId,jdbcType=INTEGER},</if>
            <if test="customerUN != null">customerUN=#{customerUN,jdbcType=VARCHAR},</if>
            <if test="customerPN != null">customerPN=#{customerPN,jdbcType=VARCHAR},</if>
            <if test="customerPW != null">customerPW=#{customerPW,jdbcType=VARCHAR},</if>
            <if test="source != null">source=#{source,jdbcType=VARCHAR},</if>
            <if test="wechat != null">wechat=#{wechat,jdbcType=VARCHAR},</if>
            <if test="portrait != null">portrait=#{portrait,jdbcType=VARCHAR},</if>
            <if test="nickname != null">nickname=#{nickname,jdbcType=VARCHAR},</if>
            <if test="sex != null">sex=#{sex,jdbcType=INTEGER},</if>
            <if test="birthday != null">birthday=#{birthday,jdbcType=DATE},</if>
            <if test="area != null and area != ''">area=#{area,jdbcType=VARCHAR},</if>
            <if test="timeLogin != null">timeLogin=#{timeLogin,jdbcType=DATE},</if>
            <if test="loginErrorNum != null">loginErrorNum=#{loginErrorNum,jdbcType=INTEGER},</if>
            <if test="timeLockover != null">timeLockover=#{timeLockover,jdbcType=DATE},</if>
            <if test="typeLock != null">typeLock=#{typeLock,jdbcType=INTEGER},</if>
            <if test="typeUser != null">typeUser=#{typeUser,jdbcType=INTEGER},</if>
            <if test="status != null">status=#{status,jdbcType=INTEGER},</if>
            <if test="timeJoin != null">timeJoin=#{timeJoin,jdbcType=DATE},</if>
            <if test="token != null">token=#{token,jdbcType=VARCHAR},</if>
            <if test="tokenaging != null">tokenaging=#{tokenaging,jdbcType=DATE},</if>
            <if test="androidDeviceId != null">androidDeviceId=#{androidDeviceId,jdbcType=VARCHAR},</if>
            <if test="iosDeviceId != null">iosDeviceId=#{iosDeviceId,jdbcType=VARCHAR},</if>
            <if test="openId != null">openId=#{openId,jdbcType=VARCHAR},</if>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteModel" parameterType="java.lang.Integer">
        delete from cbh_user_customer where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="findMore" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT c.id,c.openId,c.status,c.timeJoin,c.portrait,c.nickname,c.customerPN,c.source AS shopName,COUNT(car.id) AS carNum,COUNT( CASE WHEN car.status=20 THEN car.status END) AS carInGuaranteeNum,e.eventNum
        FROM cbh_user_customer c
            LEFT JOIN cbh_car car ON car.customerId=c.id
            LEFT JOIN (SELECT COUNT(1)  AS eventNum,e.customerId FROM cbh_event e GROUP BY e.customerId) e ON e.customerId=c.id
        GROUP BY c.id
        HAVING 1 = 1
        <if test="nickname != null and nickname != ''"> and c.nickname like concat(#{nickname,jdbcType=VARCHAR},'%')</if>
        <if test="customerPN != null and customerPN != ''"> and c.customerPN like concat(#{customerPN,jdbcType=VARCHAR},'%')</if>
        <if test="status != null"> AND c.status = #{status,jdbcType=INTEGER}</if>
        <if test="openId != null and openId != ''"> and c.openId = #{openId}</if>
        ORDER BY c.timeJoin DESC
    </select>

    <select id="findCustomerAndCar" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT c.id AS customerId,car.id AS carId
        FROM cbh_user_customer c
        LEFT JOIN cbh_car car ON c.id = car.customerId
        WHERE c.status=1 AND car.status=20
        AND c.customerPN = #{customerPN,jdbcType=VARCHAR}
        AND car.licensePlateNumber = #{licensePlateNumber,jdbcType=VARCHAR}
    </select>

  <select id="findUser" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT c.id carId,c.licensePlateNumber,c.model,u.id,u.customerUN,u.customerPN,u.customerPW,u.wechat,u.portrait,u.nickname,u.sex,u.birthday,u.area,u.timeLogin,u.loginErrorNum,u.timeLockover,
        u.typeLock,u.typeUser,u.status,u.timeJoin,u.token,DATE_FORMAT(u.tokenaging,'%Y-%m-%d %T') tokenaging,u.androidDeviceId,u.iosDeviceId,u.openId FROM cbh_user_customer u
      LEFT JOIN cbh_car c on c.customerId=u.id
      WHERE 1=1
      <if test="id != null and id != ''"> and u.id = #{id}</if>
      <if test="carId != null and carId != ''"> and c.id = #{carId}</if>
      <if test="customerPN != null and customerPN != ''"> and u.customerPN = #{customerPN}</if>
      <if test="licensePlateNumber != null and licensePlateNumber != ''"> and c.licensePlateNumber = #{licensePlateNumber}</if>
      limit 1
  </select>

  <select id="findUserInfo" parameterType="java.util.Map" resultType="java.util.Map">
       select u.id,u.portrait,u.nickname userName,case when u.sex is null then '未设置' when u.sex='1' then '男'
	  else '女' end sex,if(u.timeJoin is null,'未加入','已加入') isJion,IFNULL(TIMESTAMPDIFF(DAY,c.minT,now())+1,0) joinDay,m.id mId
 	  from cbh_user_customer u
	  LEFT JOIN cbh_message m on m.customerId=u.id and m.isRead=1
		LEFT JOIN (select MIN(c.timeBegin) minT,c.customerId from cbh_car c GROUP BY c.customerId) c on c.customerId=u.id
	  where 1=1
      <if test="id != null and id != ''"> and u.id = #{id}</if>
      <if test="customerPN != null and customerPN != ''"> and u.customerPN = #{customerPN}</if>
      limit 1
  </select>

  <select id="selectByTokenAndMobileNo" parameterType="java.lang.String" resultType="java.util.Map">
      select id,customerUN,customerPN,customerPW,wechat,portrait,nickname,sex,birthday,area,timeLogin,loginErrorNum,timeLockover,
          typeLock,typeUser,status,timeJoin,token,DATE_FORMAT(tokenaging,'%Y-%m-%d %T') tokenaging,androidDeviceId,iosDeviceId,openId
      from cbh_user_customer
      WHERE toKen = #{token,jdbcType=VARCHAR}
  </select>

  <select id="selectRechargeList" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT
          GROUP_CONCAT( a.content ) gc,
          GROUP_CONCAT( a.time ) gt,
          GROUP_CONCAT( a.amt ) ga,
          GROUP_CONCAT( a.type ) gtype,
          DATE_FORMAT( a.time, '%Y-%m' ) ft
      FROM
      (
          SELECT
              CASE	WHEN
              r.eventType = 3 THEN
              CONCAT( IFNULL( c.licensePlateNumber, '' ), '已定损|你分摊支付', r.amt, '元维修款' )
              WHEN
              <![CDATA[  r.eventType<3  ]]> AND r.type = 1 THEN
              CONCAT('您为',IFNULL(c.licensePlateNumber,''),'充值',r.amt,'元互助金(用户分摊)')
              WHEN
              <![CDATA[  r.eventType<3  ]]> AND r.type > 1 THEN
              CONCAT('系统为',IFNULL(c.licensePlateNumber,''),'充值',r.amt,'元互助金(用户分摊)')
              END content,
              r.amt,
              r.eventType type,
              r.timeRecharge time
          FROM
              cbh_record_recharge r
          LEFT JOIN cbh_car c ON r.carId = c.id
          WHERE
              r.customerId = #{customerId}
              and r.`status` = 1
              AND r.description IS NOT NULL
      ) a
      GROUP BY
        ft
      ORDER BY
        a.time DESC
  </select>

  <select id="selectCount" parameterType="String" resultType="java.util.Map">
      select * from (select count(1) carCount from cbh_car c where c.customerId = #{customerId}) a,
      (select count(1) eventCount from cbh_event e where e.statusEvent!=100 and e.customerId=#{customerId}) b
  </select>

  <select id="findUserList" parameterType="String" resultType="java.util.Map">
        select u.id customerId,u.nickname,u.customerPN,u.openId,GROUP_CONCAT(IFNULL(c.id,'-1')) carId,GROUP_CONCAT(IFNULL(c.licensePlateNumber,'-1')) licensePlateNumber,GROUP_CONCAT(IFNULL(c.model,'-1')) model,GROUP_CONCAT(IFNULL(c.timeBegin,'-1')) timeBegin,
          GROUP_CONCAT(IFNULL(c.timeSignout,'-1')) timeSignout
        from cbh_user_customer u,cbh_car c where c.customerId=u.id and c.licensePlateNumber is not null
        and (c.timeSignout ='1111-11-11 11:11:11' or c.timeSignout>DATE_SUB(now(),interval 7 day)) and c.timeBegin is not null
        GROUP BY u.id
  </select>

   <select id="findAmtBycar" parameterType="String" resultType="java.util.Map">
        select count(1) number,GROUP_CONCAT(e.id) ids,GROUP_CONCAT(DISTINCT(CONVERT(u.nickname,char))) names,sum(e.amtCooperation+e.amtCBH) totalAmount,sum(e.amtShare) money from cbh_event e
        LEFT JOIN cbh_user_customer u on u.id=e.customerId where e.statusEvent>70 and e.timeComplete>=DATE_ADD(now(), INTERVAL -7 DAY) and e.timeComplete>=#{timeBegin}
        <if test="timeSignout != null and timeSignout != ''">and #{timeSignout}>=e.timeComplete</if>
  </select>
    <select id="findEventCount" parameterType="String" resultType="Int">
        select count(1) count from cbh_event e where  e.statusEvent>70 and e.timeComplete>=DATE_ADD(now(), INTERVAL -7 DAY)
    </select>

    <select id="findShopCustomer" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT c.* FROM cbh_user_customer c
        LEFT JOIN middle_customer_maintenanceshop cm ON c.openId = cm.openId
        WHERE cm.maintenanceshopId = #{maintenanceshopId,jdbcType=INTEGER}
    </select>

    <select id="chartRegister" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT datelist,IFNULL(num,0) AS num FROM
            (SELECT * FROM sys_calendar WHERE datelist BETWEEN #{beginTime} AND #{endTime}) AS date
        LEFT JOIN
            (SELECT DATE_FORMAT(createAt,'%Y-%m-%d') AS createAt,COUNT(id) AS num
                FROM cbh_user_customer c
                WHERE createAt BETWEEN #{beginTime} AND #{endTime}
              GROUP BY DATE_FORMAT(createAt,'%Y-%m-%d')) AS result
        ON result.createAt = date.datelist
        ORDER BY datelist
    </select>

    <select id="findCount" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            COUNT(*) AS totalNum,
            COUNT( CASE WHEN c.status=1 THEN c.status END) AS normalNum,
            COUNT( CASE WHEN c.status=2 THEN c.status END) AS freezeNum
        FROM cbh_user_customer c
        WHERE 1=1
        <if test="customerPN != null and customerPN != ''"> and c.customerPN like concat(#{customerPN,jdbcType=VARCHAR},'%')</if>
    </select>
    <select id="findFirstCarByOpenId" parameterType="String" resultType="java.util.Map">
       select c.* from cbh_user_customer u
LEFT JOIN(select c1.* from (select min(id) minId from cbh_car c GROUP BY c.customerId) c 
LEFT JOIN cbh_car c1 on c1.id=c.minId) c on c.customerId=u.id
where u.id=#{customerId}
    </select>
    <select id="findSingle" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            c.*,SUM( car.amtCooperation ) AS totalAmtCooperation,COUNT( car.id ) AS totalCarNum,
            COUNT( CASE WHEN car.STATUS = 20 THEN car.STATUS END ) AS guaranteeCarNum
        FROM cbh_user_customer c
            LEFT JOIN cbh_car car ON c.id = car.customerId
        WHERE
            c.id = #{customerId,jdbcType=INTEGER}
        GROUP BY c.id
    </select>

    <select id="getCustomerinfo" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT id FROM cbh_user_customer
        where customerPN = #{mobileNumber,jdbcType=VARCHAR}
        LIMIT 1
    </select>
    <select id="selectByMobileNumber" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT openId FROM cbh_user_customer
        where customerPN = #{customerPN,jdbcType=VARCHAR}
        LIMIT 1
    </select>
    <select id="getHomePageData" resultType="java.util.Map">
        select a.*,b.* from (
            (select count(*) AS eventNumber
            from cbh_event
            where statusEvent>40) a
            JOIN
            (select round(showTotal+amtPaid) AS amtBalance,round(amtPaid) AS amtPaid,showCustomer AS userNumber
            from cbh_foundation)b
              )
    </select>

    <select id="chartRegisterForChannel" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            c.source AS names,
            count(1) AS nums
        FROM
            cbh_user_customer c
        WHERE
            c.createAt BETWEEN #{beginTime} AND #{endTime}
        GROUP BY
            c.source
        ORDER BY nums DESC
    </select>

    <select id="getUserInfoById" resultType="java.util.Map">
        SELECT
            c.id,
            c.openId,
            c.customerPN,
            c.nickname,
            c.portrait,
            c.headPortrait
        FROM
            cbh_user_customer c
        WHERE
            c.id = #{customerId}
    </select>
    <update id="updateHeadPortrait">
        UPDATE cbh_user_customer c SET c.headPortrait = #{newFileName} WHERE c.id=#{customerId};
    </update>

	<select id="getRegisterNum" parameterType="java.util.Map" resultType="java.util.Map">
		 SELECT SUM(IFNULL(num,0)) AS registerNum FROM  
		 	(		 
		 	SELECT * FROM sys_calendar WHERE 1=1 
		 	<if test="beginTime != null and endTime != null and beginTime != '' and endTime != ''"> and datelist BETWEEN #{beginTime} AND #{endTime}</if>
		 	) AS date
 		LEFT JOIN (
			SELECT DATE_FORMAT(createAt,'%Y-%m-%d') AS createAt,COUNT(id) AS num FROM cbh_user_customer c WHERE 1=1 
			<if test="beginTime != null and endTime != null and beginTime != '' and endTime != ''"> and createAt BETWEEN #{beginTime} AND #{endTime}</if>
			GROUP BY DATE_FORMAT(createAt,'%Y-%m-%d')
			) AS result
        	ON result.createAt = date.datelist
	</select>

    <select id="getCustomerByOpenId" parameterType="Map" resultType="Map">
        SELECT
            a.id,
            a.openId
        FROM
            cbh_user_customer a
        WHERE
            a.openId = #{openId}
    </select>
    
    <select id="getInvitationSuccessTempParam" parameterType="String" resultType="Map">
        SELECT
            t.openid,
            count( 1 ) num
        FROM
            (
        SELECT
            u.openid
        FROM
            cbh_user_customer u
            LEFT JOIN cbh_invitation_customer i ON u.id = i.customerId
            AND i.`status` = 1
        WHERE
            u.id = #{customerId}
            ) t
    </select>

    <select id="getAllUserCount" resultType="Map">
        SELECT
        COUNT( c.id) signupCount,
        COUNT( CASE WHEN u.source = '自然用户' AND c.status in (13,20,30) THEN c.id END ) natureUserCount,
        COUNT( CASE WHEN u.source = '邀请活动' AND c.status in (13,20,30) THEN c.id END ) invitationUserCount,
        COUNT( CASE WHEN  <![CDATA[  u.source <> '自然用户' ]]> AND  <![CDATA[  u.source <> '邀请活动'  ]]> AND c.status in (13,20,30) THEN c.id END ) channelUserCount
        FROM
        cbh_user_customer u,cbh_car c
		WHERE  c.customerId = u.id
    </select>

    <select id="getUserInfoAndCarInfoByPhoneNo" resultType="Map" parameterType="String">
        SELECT
            u.id userId,
            u.customerPN,
            u.openId,
            c.id carId,
            c.licensePlateNumber,
            c.status,
            c.typeGuarantee
        FROM
            cbh_user_customer u,
            cbh_car c
        WHERE
            u.id = c.customerId
            AND u.customerPN = #{customerPN}
    </select>
</mapper>